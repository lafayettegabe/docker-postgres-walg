# === GETTING STARTED ===
# 1. Generate encryption key: openssl rand -hex 32
# 2. Set up your S3 bucket and credentials
# 3. Update the required settings
# 4. Run: docker compose up -d
# 5. Check logs: docker logs postgres-walg

# === REQUIRED SETTINGS ===
# PostgreSQL Configuration
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change_this_password
POSTGRES_DB=myapp

# S3 Storage Configuration
AWS_ACCESS_KEY_ID=your_key_here
AWS_SECRET_ACCESS_KEY=your_secret_here
WALG_S3_PREFIX=s3://your-bucket-name/postgres-backups

# Encryption Key (generate with: openssl rand -hex 32)
WALG_LIBSODIUM_KEY=generate_and_paste_64_char_hex_key_here

# === BACKUP CONFIGURATION ===
# Backup Control
WALG_AUTOMATED_BACKUPS=true             # Enable/disable all automated backups
WALG_RETENTION_DAYS=30                  # Days to keep backups (no count limit)

# === OPTIONAL SETTINGS ===
# Uncomment and modify if needed

# PostgreSQL port (default: 5432)
# POSTGRES_PORT=5432

# Data paths (default: ./data/postgres and ./data/logs)
# DATA_PATH=./data/postgres
# LOGS_PATH=./data/logs

# AWS/S3 Configuration
# AWS_REGION=us-east-1                   # S3 region (default: us-east-1)

# For MinIO/non-AWS S3 services:
# AWS_ENDPOINT=https://your-minio-domain.com

# WAL-G Performance Tuning (defaults are usually fine)
# WALG_COMPRESSION_METHOD=lz4            # Compression: lz4, brotli, lzma
# WALG_UPLOAD_CONCURRENCY=16             # Upload threads
# WALG_DOWNLOAD_CONCURRENCY=10           # Download threads
# WALG_DELTA_MAX_STEPS=6                 # Delta backup chain length

# Email Notifications (optional)
# WALG_NOTIFICATION_EMAIL=admin@yourcompany.com

# pgAdmin access (use: docker compose --profile admin up -d)
# PGADMIN_EMAIL=admin@yourcompany.com
# PGADMIN_PASSWORD=pgadmin_password
# PGADMIN_PORT=8080

# === BACKUP SCHEDULE INFORMATION ===
# The following schedules are HARDCODED and CANNOT be changed:
# - Incremental backups: Every 2 hours (00:00, 02:00, 06:00, 08:00, etc.)
# - Full backups: Daily at 4:00 AM
# - Cleanup: Daily at 5:00 AM
#
# These schedules ensure consistent, enterprise-grade backup protection
# without the possibility of configuration errors.

# === S3 PROVIDER EXAMPLES ===

# AWS S3 Example:
# AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
# AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# WALG_S3_PREFIX=s3://my-backup-bucket/postgres-backups

# MinIO Example:
# AWS_ACCESS_KEY_ID=minioadmin
# AWS_SECRET_ACCESS_KEY=minioadmin123
# AWS_ENDPOINT=https://minio.yourdomain.com
# WALG_S3_PREFIX=s3://postgres-backups/data

# DigitalOcean Spaces Example:
# AWS_ACCESS_KEY_ID=your_spaces_key
# AWS_SECRET_ACCESS_KEY=your_spaces_secret
# AWS_ENDPOINT=https://nyc3.digitaloceanspaces.com
# WALG_S3_PREFIX=s3://your-space-name/postgres-backups